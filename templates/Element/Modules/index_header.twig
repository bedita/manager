<div class="module-header">
    {% set filterActive = (_view.request.getQuery('filter') or _view.request.getQuery('q')) %}
    {% set list = [] %}
    {% set options = [] %}
    {% set properties = schema.properties|default([]) %}
    {% for f in filter %}
        {% set options = options|merge(Schema.filterOptions(f, properties)) %}
        {% set list = list|merge({ (loop.index0): options }) %}
    {% endfor %}

    <filter-box-view
        :pagination="{{ meta.pagination|json_encode|escape('html_attr') }}"
        :init-filter="urlFilterQuery"
        :selected-types='selectedTypes'
        :filter-list="{{ list|json_encode|escape('html_attr') }}"
        :filter-active="{{ filterActive|json_encode|escape('html_attr') }}"

        config-paginate-sizes="{{ config('Pagination.sizeAvailable')|json_encode|escape('html_attr') }}"
        placeholder="{{ __('Search') }}"
        objects-label="{{ resourceType ? __(resourceType|humanize) : __(currentModule.name|humanize) }}"
        page-size="{{ meta.pagination.page_size }}"

        @filter-objects="onFilterObjects"
        @filter-reset="resetFilters"
        @filter-update-current-page="onUpdateCurrentPage"
        @filter-update-page-size="onUpdatePageSize"
        inline-template
    >
        {{ element('FilterBox/filter_box', { 'meta': meta, 'hideFilter': hideFilter, 'hidePagination': hidePagination }) }}
    </filter-box-view>
</div>
