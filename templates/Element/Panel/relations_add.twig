{% set selectBaseClasses = "has-background-gray-700 has-border-gray-700 has-font-weight-light has-text-gray-200 has-text-size-smallest" %}

<div class="relations-add">
    <section class="fieldset mb-1">
        <header class="mx-1 tab unselectable"
            :class="{ open: showCreateObjectForm }"
            :disabled="saving"
            @click="resetForms">
            <h2><span v-show="relationName"><strong>{{ __('create new for') }}</strong> "<: relationLabel :></span>"</h2>
        </header>

        <div class="create-new-object mt-1 mx-1" v-if="showCreateObjectForm">
            <div class="select">
                <label for="related_object_type">{{ __('Type') }}</label>
                <select id="related_object_type"
                    name="related_object_type"
                    class="{{ selectBaseClasses }}"
                    @change="onChangeType"
                    v-if="relationTypes"
                    v-model="object.type">
                    <option value="_choose">{{ __('Choose a type') }}</option>
                    <option v-for="type in relationTypes.right" :value="type"><: t(capitalize(type)) :></option>
                </select>
            </div>

            {% for type in Schema.rightTypes() %}
                {% set prefix = '_fast_create_' ~ type ~ '_' %}
                {{ Form.create(null, {
                    'name': 'create-object',
                    'class': 'object-form fast-create',
                    ':disable': 'saving',
                    'id': type ~ '-form',
                    'ref': type ~ '-form',
                    'v-if': "object.type == '" ~ type ~ "'"
                })|raw }}
                    {{ Form.control('upload_behavior', {
                        'id': 'url_behavior',
                        'type': 'hidden',
                        'v-bind:value': 'url'
                    }) | raw }}
                    {{ Form.control('upload_behavior', {
                        'id': 'file_behavior',
                        'type': 'hidden',
                        'v-bind:value': 'file'
                    }) | raw }}
                    {% do Form.unlockField('upload_behavior') %}

                    <section class="fieldset mb-1">
                        <div class="container">
                            <fieldset id="{{ type }}-form-fields">
                                {{ Property.fastCreateFields(type, prefix)|raw }}
                            </fieldset>

                            <div class="input text" v-if="isMedia">
                                <label for="{{ prefix }}file">{{ __('File') }}</label>
                                <input type="file" name="file" v-on:change="processFile($event, object?.type)" id="{{ prefix }}file" class="drop-file" />

                                <figure class="thumb" v-if="object?.type === 'images' && file?.name">
                                    <img :src=previewImage() alt="" style="max-width: 100%;" />
                                </figure>
                            </div>

                            <div class="input text" v-if="isMedia">
                                <label for="{{ prefix }}remote_url">{{ __('Url') }}</label>
                                {{ Form.text('remote_url', {
                                    'id': prefix ~ 'remote_url',
                                    'v-model': 'url',
                                    'type': 'text',
                                    'autocomplete': 'off',
                                    'autocorrect': 'off',
                                    'autocapitalize': 'off',
                                    'spellcheck': 'false',
                                    'placeholder': __('Remote URL') }) | raw
                                }}
                            </div>
                        </div>
                    </section>
                    <button @click="createObject" type="button">{{ __('create') }}</button>
                    <button @click="resetForm($event, object?.type)">{{ __('reset') }}</button>
                {{ Form.end()|raw }}
            {% endfor %}
        </div>
    </section>

    <section class="fieldset shrinks">
        <header class="mx-1 tab tab-static unselectable" v-bind:class="!objects || loading ? 'is-loading-spinner' : ''">
            <h2><span v-show="relationName"><strong>{{ __('add') }}</strong>&nbsp;{{ __('elements to') }}&nbsp;"<strong><: relationLabel :></strong>"</span></h2>
        </header>

        <div class="px-1 my-1">
            {% set list = {} %}
            {% for type, filters in filtersByType %}
                {% set options = [] %}
                {% for f in filters %}
                    {% set o = Schema.controlOptions(f, null, schemasByType[type].properties[f]) %}
                    {% set options = options|merge([o|merge({ 'name': f })]) %}
                {% endfor %}
                {% set list = list|merge({ (type): options }) %}
            {% endfor %}

            <filter-box-view
                config-paginate-sizes={{ config('Pagination.sizeAvailable')|json_encode|escape('html_attr') }}
                :pagination.sync="pagination"
                :relation-types="relationTypes"
                {% if list %}
                :filters-by-type="{{ list|json_encode|escape('html_attr') }}"
                {% endif %}
                objects-label="{{ __('objects') }}"

                @filter-update-current-page="onUpdateCurrentPage"
                @filter-update-page-size="onUpdatePageSize"
                @filter-objects="onFilterObjects"
                @filter-reset="onFilterObjects"

                inline-template
            >
                {{ element('FilterBox/filter_box') }}
            </filter-box-view>
        </div>

        <div class="px-1 shrinks">
            <div class="columns">
                <div class="related-item-column column is-3 is-one-quarter-fullhd" v-for="related in objects" v-if="relationName !== 'children' || related.type !== 'folders'">
                    {{ element('Form/related_item', { 'add': true }) }}
                </div>
            </div>
        </div>

        <footer class="p-1">
            <button class="icon-ok has-background-info has-text-white"
                :disabled="!selectedObjects.length"
                @click.prevent="addRelationsToObject({
                    relationName: relationName,
                    objects: selectedObjects,
                })"
            >
                {{ __('Add') }}
                <span v-if="selectedObjects.length" class="mx-025 has-font-weight-bold"><: selectedObjects.length :></span>
                {{ __('objects to') }} <: relationName | humanize :>
            </button>

            <button class="icon-cancel mx-1" href="#" :disabled="saving" @click.prevent="closePanel()">{{ __('Close') }}</button>
        </footer>
    </section>
</div>
