@use "../../../resources/styles/variables";

.object-form {
    .fieldset > .tab-container,
    .fieldset > .container {
        padding: variables.$gutter 0 0 0;

        > div {
            margin: variables.$gutter 0;

            &:first-child {
                margin: 0;
            }
        }

        .history-field {
            border: dashed variables.$gray-600 1px;
            padding: variables.$gutter * .5;
        }

        .history-field > label {
            text-decoration: underline dotted;
        }

        .input.title, .input.uri {
            input[type=text] {
                font-size: variables.$font-size-llg;
            }
        }

        @media screen and (min-width: 1024px) {
            grid-template-columns: repeat( auto-fit, minmax(212px, 1fr) );
            display: grid;
            grid-gap: variables.$gutter * 1.5 variables.$gutter;

            > div {
                margin: 0;
            }

            .input.select select {
                width: 100%;
            }

            .input.title, .input.uri, .input.textarea, .stream, .grid-span-full {
                grid-column: 1/-1;
            }
        }

        .create-media-box {
            padding: variables.$gutter * .5 variables.$gutter variables.$gutter * 1.25;
            margin-bottom: variables.$gutter * 1.5;
            background-color: variables.$gray-800;
            border-radius: 4px;
        }

        #{variables.$text-inputs}, textarea {
            width: 100%;
            background-color: variables.$gray-200;

            &:disabled {
                opacity: 0.65;
                cursor: not-allowed;
            }
        }

        #{variables.$text-inputs} {
            &.input-narrow {
                max-width: 4 * variables.$gutter;
            }
        }

        // Invalid field
        .invalid input[type=text] {
            background-color: red;
        }

        .select {
            select {
                min-width: 12 * variables.$gutter;
            }
            label {
                cursor: pointer;
            }
        }

        label {
            display: block;
            flex: 1 0 100%;
            line-height: variables.$gutter * 1.75;
        }

        .stream {
            display: flex;
        }
        .thumb {
            background-color: variables.$gray-400;
            display: inline-block;
            a {
                display: block;
                background-image: linear-gradient(45deg, variables.$gray-300 25%, transparent 25%), linear-gradient(-45deg, variables.$gray-300 25%, transparent 25%), linear-gradient(45deg, transparent 75%, variables.$gray-300 75%), linear-gradient(-45deg, transparent 75%, variables.$gray-300 75%);
                background-size: 20px 20px;
                background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
                img {
                    display: block;
                    max-width: 100%;
                }
            }
        }

        .embedded-container {
            position: relative;
            padding-bottom: 56.25%; // default 16/9
            padding-top: 30px;
            height: 0;
            overflow: hidden;
            iframe, object, embed {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
            }
        }

        .input.status {
            display: flex;
            flex-wrap: wrap;

            label:not(:first-child) {
                flex: 0 0 auto;
                margin-right: variables.$gutter;
                cursor: pointer;
            }
        }

        .priority {

            .input-narrow {
                border-radius: 50%;
                width: 2.125rem;
                height: 2.125rem;
                max-width: auto;
                min-width: auto;
                border: 1px solid variables.$gray-900;
                text-align: center;
                padding:0;
            }
        }
    }
}
