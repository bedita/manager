{#
    Several switches on kind of relation view:
    • common      (relation.twig)
    • stage       (relation.twig)
    • add         (relations_add.twig in panel)
    • translation (translations.twig)
    • children    (translations.twig)
#}

{% set positionInUse = children %}
{% if 'children_order' in object.attributes|keys %}
    {% set positionInUse = children and object.attributes.children_order in [null, 'position', '-position'] %}
{% endif %}

<article class="box"
    {%- if add %}
        :class="selectClasses(related)"
        @click="toggle(related, $event)"
        draggable
        :drag-data="JSON.stringify(related)"
    {% else %}
        :class="`${related.type} has-shadow-color-${related.type}`"
    {%- endif -%} >


    {# PRIORITY (or position) #}
    {% if common or positionInUse %}
        <div class="priority">
            {% if children %}
                <span class="badge" v-html="position(related, index + 1)"></span>
            {% else %}
                <span class="badge"><: related.meta.relation.priority :></span>
            {% endif %}
        </div>
    {% endif %}


    {# RIBBON (new items) #}
    {% if stage %}
        <div class="ribbon" :class="'has-background-module-' + related.type">
            {{ __('NEW') }}
        </div>
    {% endif %}

    <div v-if="Date.parse(related.attributes.publish_start) > Date.now()" class="ribbon" :class="'has-background-module-' + related.type">
         {{ __('Future') }}
    </div>
    <div v-if="Date.parse(related.attributes.publish_end) < Date.now()" class="ribbon" :class="'has-background-module-' + related.type">
         {{ __('Expired') }}
    </div>

    {# THUMBNAIL #}
    {% if not translation %}
    <div class="thumbnail" :class="'has-text-module-' + related.type">
        <figure class="center-icon icon-opaque"
            :class="(related.meta && related.meta.thumb_url)? '' : `icon-cube icon-${related.type}`">
            <img :src="related.meta.thumb_url" v-if="related.meta && related.meta.thumb_url" />
        </figure>
    </div>
    {% endif %}


    {# BODY #}
    <div class="box-body p-05">

        <div class="is-flex space-between align-center">
            {% if translation %}
                <span class="tag is-dark"><: related.attributes.lang :></span>
            {% else %}
                <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.type :></span>

                <span class="icon-calendar-check-o" v-title="datesInfo(related)"></span>
            {% endif %}

            <span class="status is-uppercase has-text-size-smallest" v-if="related.attributes.status"><: related.attributes.status :></span>
        </div>

        <header class="is-flex space-between mt-05">
            <div>

                <h3 class="title m-0 has-text-size-small" style="padding-bottom: 7px;">
                    {% if translation %}
                        <span :title="related.attributes.translated_fields.title" v-if="related.attributes.translated_fields && related.attributes.translated_fields.title ">
                            <: truncate(related.attributes.translated_fields.title, 50) :>
                        </span>
                    {% else %}
                        <span :title="related?.attributes?.title || related?.attributes?.name || related?.attributes?.uname || '-'">
                            <: truncate(related?.attributes?.title || related?.attributes?.name || related?.attributes?.uname || '-', 50) :>
                        </span>
                    {% endif %}
                </h3>

            {% if not add and not stage %}

                {% if in_array('admin', user.roles) %}
                <div v-if="relatedStream(related)" class="has-text-size-smallest">
                    <: relatedStreamProp(related, 'mime_type') :>
                </div>
                {% endif %}

                <div v-if="relatedStream(related)" class="has-text-size-smallest">
                    <: relatedStreamProp(related, 'file_size', 'bytes') :>
                </div>

                <div v-if="relatedStream(related)" class="has-text-size-smaller">
                    <a :href="relatedStreamProp(related, 'url')" target="_blank" class="icon-eye-1" title="{{ __('View file') }}"></a>
                    <a :href="relatedStreamDownloadUrl(related)" class="icon-download-1" title="{{ __('Download file') }}"></a>
                </div>
            {% endif %}

            </div>

        </header>
    </div>


    {# PARAMS #}
    {% if common %}
    <div class="params p-05 has-text-size-smaller" v-if="relationSchema">
        <dl v-if="relationHasParams()" class="mb-05">
            <template v-for="(param, key) in relationSchema">
                <div class="term-container">
                    <dt class="is-capitalized"><: key|humanize :></dt>
                    <dd>
                        <span v-if="getParamHelper(related, key)"><: formatParam(key, getParamHelper(related, key)) :></span>
                        <span v-else>-</span>
                    </dd>
                </div>
            </template>
        </dl>

        <button v-if="isPanelOpen(related.id)" class="is-small icon-coffee"
                @click.prevent.stop="closePanel()">{{ __('cancel') }}</button>

        {% if not readonly %}
        <button v-else class="is-small icon-th-list-1"
            :disabled="isPanelOpen()"
            @click.prevent.stop="editRelationParams({
                object: {{ object|json_encode }},
                related: related,
                relationName: relationName,
                relationLabel: relationLabel,
                schema: relationSchema,
            })">{{ __('Edit params') }}</button>
        {% endif %}
    </div>
    {% endif %}

    {# CHILDREN position #}
    {% if positionInUse %}
        <div class="children-position container-grid p-05">
            <dl>
                <dt>{{ __('Move to position') }}:</dt>
                <dd>
                    <input class="input-narrow" type="number" min="1" step="1"
                        v-model="positions[related.id]" @change="onInputPosition(related)" @keyup="onInputPosition(related)"/>
                </dd>
            </dl>
        </div>
    {% endif %}


    {# BUTTONS #}
    {% if Perms.canSave() %}
    <footer class="is-flex space-between mt-05 p-05">
        {% if stage %}
            <a class="icon-link-ext button button-outlined-white is-small mr-1" :href="$helpers.buildViewUrl(related.id)" target="_blank">{{ __('Edit') }}</a>
            {% if not readonly %}
            <a class="icon-link-cancel button button-outlined-white is-small" @click.prevent="removeAddedRelations(related.id)">{{ __('Remove') }}</a>
            {% endif %}

        {% elseif add %}
            <button class="is-small has-font-weight-bold mr-1"
                v-html="(selectedObjects.indexOf(related) !== -1)? '{{ __('Discard') }}' : '{{ __('Pick') }}'"
                :class="(selectedObjects.indexOf(related) !== -1)? 'icon-check button-secondary' : 'button-outlined-white button-text icon-check-empty'"></button>
            <a class="icon-link-ext button button-outlined-white is-small" @click.stop :href="$helpers.buildViewUrl(related.id)" target="_blank">{{ __('Open') }}</a>

        {% elseif translation %}
            {% set baseUrl= Url.build({ '_name': 'translations:edit', 'object_type': object.type, 'id': object.id, 'lang': ''}, {'fullBase': true}) %}
            <a class="icon-link-ext button button-outlined-white is-small mr-1" :href="`{{ baseUrl }}${related.attributes.lang}`" target="_blank">{{ __('Open') }}</a>
            <a class="icon-cancel button button-text is-small" @click.prevent="relationToggle(related)"
                v-html="containsId(removedRelated, related.id)? '{{__('undo remove') }}' : '{{ __('remove') }}'"></a>

        {% else %}
            <a class="icon-link-ext button button-outlined-white is-small mr-1" :href="$helpers.buildViewUrl(related.id)" target="_blank" v-show="moduleAvailable(related.type)">{{ __('Edit') }}</a>
            {% if not readonly %}
            <a class="button button-text is-small" @click.prevent="relationToggle(related)" :class="containsId(removedRelated, related.id) ? 'icon-cw-2' : 'icon-unlink'"
                v-html="containsId(removedRelated, related.id) ? '{{__('undo') }}' : '{{ __('remove') }}'">
            </a>
            {% endif %}
        {% endif %}
    </footer>
    {% endif %}

</article>
