{% set translatable = true %}
{% if schema.translatable is iterable %}
    {% set translatable = schema.translatable is not empty %}
{% else %}
    {% set translatable = object.relationships.translations is not empty %}
{% endif %}
{% if schema.properties.lang %}
    <property-view inline-template :tab-open="tabsOpen" tab-name="translations" ref={{ resourceName }}>
        <section class="fieldset order-{{ cssOrder }}" :class="isOpen? '' : 'closed'">

            <header @click.prevent="toggleVisibility();"
                class="tab unselectable"
                :class="isOpen? 'open has-border-module-{{ currentModule.name }}' : ''">
                <h2>
                    {{ __('Language and translations') }}
                    <span class="tag is-smallest is-black mx-05"
                        :class="!totalObjects? 'empty' : ''"><: totalObjects :>
                    </span>
                </h2>
            </header>


            <div v-show="isOpen" class="tab-container">

                <div>
                    <language-selector
                        language="{{ object.id ? object.attributes.lang : config('Project.config.I18n.default') }}"
                        :languages="{{ config('Project.config.I18n.languages')|default([])|json_encode|escape('html_attr') }}">
                    </language-selector>

                    {% if translatable and object.attributes.lang %}
                        {{ Html.link(__('Add translation'), {
                            '_name': 'translations:add',
                            'object_type': object.type,
                            'id': object.id
                        }, {
                            'target': '_blank',
                            'class' : 'icon-plus button mt-1',
                        })|raw }}
                    {% endif %}
                </div>

                {% if object.relationships.translations %}
                <relation-view inline-template
                    relation-name={{ resourceName }}
                    relation-label="{{ Layout.tr(resourceName) }}"
                    config-paginate-sizes={{ config('Pagination.sizeAvailable')|json_encode()|raw }}
                    ref="relation"

                    @loading="onToggleLoading"
                    @count="onCount">

                    <div class="relation-view">
                        <div class="related-list-container">
                            {# related objects #}
                            <div class="related-objects-list columns" v-bind:class="loading? 'isLoading' : ''">
                                <div class="related-object column is-2 is-one-third-fullhd"
                                    v-for="(related, index) in objects"
                                    :key="related.id"
                                    :class="containsId(removedRelated, related.id)? 'removed' : ''">

                                    {{ element('Form/related_item', { 'translation': true }) }}

                                </div>
                            </div>

                        </div>

                        {# hidden field - relations serialized json #}
                        {{ Form.control(resourceName ~ 'removeRelated', {
                            'type': 'hidden',
                            'name': 'relations[' ~ resourceName ~ '][removeRelated]',
                            'v-model': 'removedRelationsData'
                        })|raw }}
                        {% do Form.unlockField('relations.' ~ resourceName ~ '.removeRelated') %}

                    </div>
                </relation-view>
                {% endif %}
            </div>

        </section>
    </property-view>

{% endif %}
