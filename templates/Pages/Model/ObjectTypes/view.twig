{% do _view.assign('title', 'Model ' ~ resourceType|humanize) %}
{% do _view.assign('bodyViewClass', 'view-module view-model') %}

<modules-view inline-template ref="moduleView">
<div class="modules-view">

    {% if resource.id %}
    <header>
        <h1 untitled-label="{{ __('Untitled') }}">{{ resource.attributes.name }}</h1>
    </header>
    {% endif %}

    <div class="module-form">

        {{ Form.create({'defaults': resource.attributes, 'schema': {}}, {
            'url': {'_name': 'model:save:object_types'},
            'id': 'form-main',
            'check-changes': 'true',
        })|raw }}

            {{ Form.hidden('id', {'value': (object) ? object.id : resource.id})|raw }}
            {{ Form.hidden('_actualAttributes', {'value': currentAttributes})|raw }}

            <div class="main-view-column">
                <section class="fieldset">
                    <div class="tab-container">
                        {% for key, value in properties.core %}
                            {% set options = Schema.controlOptions(key, value, schema.properties[key]) %}
                            {% if options.class != 'json' %}
                                {% if resource.meta.core_type %}
                                    {% if key in ['name', 'singular', 'table', 'is_abstract', 'parent_name'] %}
                                        {% set options = options|merge({
                                            'readonly' : true,
                                        }) %}
                                     {% endif %}
                                {% endif %}

                                {{ Property.control(key, value, options)|raw }}

                                {% if key == 'parent_name' %}
                                    <a href="{{ Url.build({'_name': 'model:view:object_types', 'id': value}) }}" class="link-to-parent">â€º {{ __('view parent') }}</a>
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    </div>
                </section>

                <section class="fieldset">
                    <div class="tab-container">
                        <header class="unselectable"><h2>{{ __('Add custom property') }}</h2></header>
                        {{ Property.control('prop_name', '', {'label': __('Name'), 'placeholder': 'property name'})|raw }}
                        {{ Property.control('prop_type', '', propertyTypesOptions|default([]))|raw }}
                    </div>
                </section>

            </div>

            <div class="side-view-column">
                <section class="fieldset">
                    <div class="tab-container">
                        {% for key, value in properties.core %}
                            {% if key == 'hidden' %}
                                {% set options = Schema.controlOptions(key, value, schema.properties[key]) %}
                                {{ Property.control(key, value, options|merge({'id': key}))|raw }}
                            {% elseif key == 'associations' %}
                                {{ Form.control(key, {
                                    'id': key,
                                    'value': value,
                                    'type': 'select',
                                    'multiple': 'checkbox',
                                    'options': associationsOptions
                                })|raw }}
                            {% endif %}
                        {% endfor %}
                    </div>
                </section>

                {{ element('Form/meta') }}
            </div>

        {# Set `_jsonKeys` hidden input from config #}
        {{ Form.control('_jsonKeys', {'type': 'hidden', 'value': config('_jsonKeys', [])|join(',')})|raw }}

        {{ Form.end()|raw }}

        {% do _view.append('app-module-buttons', Form.button( __('Save'),
            {
                'form': 'form-main',
                'class': 'icon-check-1 button button-primary button-primary-hover-module-' ~ currentModule.name ~ ' is-width-auto',
            }
        )) %}
        {% if not resource.meta.core_type %}
            {{ Form.create(null, {'id': 'form-delete-object-type', 'url': Url.build({'_name': 'model:remove:object_types', 'id': resource.id,})})|raw }}
            {{ Form.end()|raw }}
            {# Append "Remove" to sidebar #}
            {% do _view.append(
                'app-module-buttons',
                '<button form="form-delete-object-type" class="button button-outlined button-outlined-hover-module-model is-width-auto"><icon-trash-can-16></icon-trash-can-16><span class="ml-05">' ~ __('Remove') ~ '</span></button>'
            ) %}
        {% endif %}
    </div>


    <section class="relations">
        <header class="unselectable"><h2>{{ __('Relations') }}</h2></header>
        <div class="relations-container">
        {% if resource.meta.relations %}
            <div class="relations-group">
            {% for relation in resource.meta.relations %}
                <a class="tag is-black" href="{{ Url.build({'_name': 'model:view:relations', 'id': relation}) }}">{{ relation }}</a>
            {% endfor %}
            </ul>
        {% else %}
            <p>No Relations</p>
        {% endif %}
        </div>
    </section>


    <section class="properties">
        <header class="unselectable"><h2>{{ __('Core properties') }}</h2></header>
        <div class="properties-container">
            {% for prop in objectTypeProperties.core %}
                {% set h = prop.attributes.name in properties.core.hidden|default([]) %}
                <object-property
                    :prop="{{ prop|json_encode }}"
                    :type="{{ 'core'|json_encode }}"
                    :ishidden="{{ h|json_encode }}"
                    :nobuttonsfor="{{ []|json_encode }}">
                </object-property>
            {% else %}
                <p>{{ __('No core properties') }}</p>
            {% endfor %}
        </div>
    </section>


    <section class="properties">
        <header class="unselectable"><h2>{{ __('Inherited properties') }}</h2></header>
        <div class="properties-container">
            {% for prop in objectTypeProperties.inherited %}
                {% set h = prop.attributes.name in properties.core.hidden|default([]) %}
                <object-property
                    :prop="{{ prop|json_encode }}"
                    :type="{{ 'inherited'|json_encode }}"
                    :ishidden="{{ h|json_encode }}"
                    :nobuttonsfor="{{ ['id', 'status', 'uname']|json_encode }}">
                </object-property>
            {% else %}
                <p>{{ __('No inherited properties') }}</p>
            {% endfor %}
        </div>
    </section>


    <section class="properties">
        <header class="unselectable"><h2>{{ __('Custom properties') }}</h2></header>
        <div class="properties-container">
            {% for prop in objectTypeProperties.custom %}
                {% set h = prop.attributes.name in properties.core.hidden|default([]) %}
                <object-property
                    :prop="{{ prop|json_encode }}"
                    :type="{{ 'custom'|json_encode }}"
                    :ishidden="{{ h|json_encode }}"
                    :nobuttonsfor="{{ []|json_encode }}">
                </object-property>
            {% else %}
                <p>{{ __('No custom properties') }}</p>
            {% endfor %}
        </div>
    </section>

    {{ element('Model/sidebar_links') }}

</div>
</modules-view>
