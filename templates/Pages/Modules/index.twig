{% do _view.assign('title', __(currentModule.name|humanize)) %}

{% set query = _view.getRequest().getQueryParams() %}
{% set treeView = currentModule.name == 'folders' and query is empty %}

{{ element('Modules/index_header', { 'meta': meta, 'filter': filter, 'Schema': Schema, 'hidePagination': treeView}) }}

{% set ids = Array.extract(objects, '{*}.id') %}
<modules-index inline-template ids='{{ ids|json_encode }}'>
    <div class="module-index">
        {% if treeView %}
            {% set hasPermissions = 'Permissions' in schema.associations %}
            {% if hasPermissions and not ('admin' in user.roles) %}
                <button @click.prevent="toggleShowForbidden">
                    <Icon :icon="iconShowForbidden"></Icon>
                    <span class="ml-05"><: msgShowForbidden :></span>
                </button>
            {% endif %}
            <tree-view :user-roles="{{ user.roles|json_encode }}" :has-permissions="{{ hasPermissions|json_encode }}" :show-forbidden="showForbidden"></tree-view>
        {% else %}
            <div class="table-container">
                <div class="list-objects">
                    {% if objects %}
                        {{ element('Modules/index_table_header', { 'refObject': objects[0] }) }}
                    {% endif %}

                    {% for object in objects %}
                        {{ element('Modules/index_table_row', { 'object': object }) }}
                    {% else %}
                        {{ __('No items found') }}
                    {% endfor %}
                </div>
            </div>

            <div class="module-footer">
                {# bulk actions #}
                {% if objects %}
                    {{ element('Modules/index_bulk', {}) }}
                {% endif %}

                {% if not treeView %}
                    <filter-box-view
                        inline-template
                        :pagination="{{ meta.pagination|json_encode|escape('html_attr') }}"
                        config-paginate-sizes="{{ config('Pagination.sizeAvailable')|json_encode|escape('html_attr') }}"
                        page-size="{{ meta.pagination.page_size }}"
                        @filter-update-page-size="onUpdatePageSize"
                        @filter-update-current-page="onUpdateCurrentPage"
                    >
                        <template v-if="pagination.count">
                            {{ element('FilterBox/filter_box_page_toolbar') }}
                        </template>
                    </filter-box-view>
                {% endif %}
            </div>
        {% endif %}

        {# commands to append in side bar (commands menu) #}
        {% if Perms.canCreate() %}
            {% do _view.append(
                'app-module-buttons',
                '<a href="' ~ Url.build({'_name': 'modules:create', 'object_type': objectType}) ~ '" class="button button-primary button-primary-hover-module-' ~ currentModule.name ~ '"><Icon icon="carbon:add"></Icon><span class="ml-05">' ~ __('Create') ~ '</span></a>'
            ) %}
        {% endif %}

        {% if schema.properties.categories %}
            {% do _view.append(
                'app-module-buttons',
                '<a href="' ~ Url.build({'_name': 'modules:categories:index', 'object_type': objectType}) ~ '" class="button button-outlined button-outlined-module-' ~ currentModule.name ~ '"><Icon icon="carbon:categories"></Icon><span class="ml-05">' ~ __('Categories') ~ '</span></a>'
            ) %}
        {% endif %}

        {% if currentModule.sidebar.index %}
        {% for item in currentModule.sidebar.index %}
            {% set url = item.url is iterable ? Url.build(item.url) : item.url %}
            {% do _view.append(
                'app-module-buttons',
                '<a href="' ~ url ~ '" class="' ~ item.class|default('button button-outlined button-outlined-hover-module-' ~ currentModule.name) ~ '"><Icon icon="carbon:save"></Icon><span class="ml-05">' ~ __(item.label) ~ '</span></a>',
            ) %}
        {% endfor %}
        {% endif %}

    </div> {# end module-content #}
</modules-index>
