@use "variables";

// main grids
main.layout {
    position: relative;
    width: 100%;
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100); // iOS adjust with script and fallback
    padding: 0 variables.$gutter;

    @media (min-width: 568px) {
        display: grid;
        grid-gap: 0 variables.$gutter;
        grid-template-areas: "sidebar content-header"
                             "sidebar content-body"
                             "sidebar footer";
        grid-template-columns: variables.$dashboard-item-width auto;

        .view-dashboard & {
            grid-template-rows: auto 1fr auto;
        }

        > .layout-footer { display: none; }
    }

    @media (min-width: 1024px) {
        grid-template-rows: (variables.$dashboard-item-height + variables.$gutter) auto;
    }

    > .layout-sidebar { grid-area: sidebar; }
    > .layout-header  { grid-area: content-header; }
    > .layout-footer  { grid-area: footer; }
    > .layout-content { grid-area: content-body; }

    > .layout-content,
    > .layout-footer { padding: 0; }

    > .layout-sidebar, > .layout-footer { max-width: 100%; overflow-x: hidden; }
    > .layout-content { max-width: 100%; overflow-x: hidden; }
    > .layout-header + .layout-content {
        margin-top: variables.$gutter;

        @media screen and (min-width: 1024px) {
            margin-top: 0;
        }
    }
}



// on panel show / hide
body:not(.view-login) main.layout > .layout-content { background-color: variables.$defaultBackground; } // covers sidebar on translate
main.layout {
    > .layout-header,
    > .layout-content {
        transition: .3s transform;
    }
    > .layout-sidebar .sidebar {
        transition: .3s opacity;
    }

    .panel-is-open & {
        > .layout-header,
        > .layout-content {
            transform: translateX(-(variables.$dashboard-item-width) - variables.$gutter);
        }
        > .layout-sidebar {
            opacity: 0;
        }
        .backdrop {
            display: block;
        }
    }
}
