{% do _view.assign('title', currentModule.name|humanize) %}
{% if _view.request.getQuery('filter.type') is not iterable and _view.request.getQuery('filter.type') != 'objects' %}
    {% set elementClass = "has-background-module-" ~ _view.request.getQuery('filter.type') %}
{% endif %}

{% set query = _view.getRequest().getQueryParams() %}
{% set treeView = currentModule.name == 'folders' and query is empty %}

{% element 'Modules/index_header' { 'meta': meta, 'filter': filter, 'Schema': Schema, 'hidePagination': treeView} %}

{% set ids = Array.extract(objects, '{*}.id') %}
<modules-index inline-template ids='{{ ids|json_encode }}'>
    <div class="module-index">

        {% if treeView %}

            <tree-view></tree-view>

        {% else %}

        <div class="table-container">

            <div class="list-objects">
                {% if objects %}
                    {% element 'Modules/index_table_header' { 'refObject': objects[0] } %}
                {% endif %}

                {% for object in objects %}
                    {% element 'Modules/index_table_row' { 'object': object } %}
                {% else %}
                    {{ __('No items found') }}
                {% endfor %}
            </div>
        </div>

            {# bulk actions #}
            {% if objects %}
                {% element 'Modules/index_bulk' {} %}
            {% endif %}

        {% endif %}


        {# commands to append in side bar (commands menu) #}
        {% if Perms.canCreate() %}
            {% do _view.append('module-buttons',
                Html.link(__('Create new'),
                    {'_name': 'modules:create', 'object_type': objectType},
                    {'class': 'button button-primary button-primary-hover-module-' ~ currentModule.name}
                )|raw
            ) %}
        {% endif %}

    </div> {# end module-content #}
</modules-index>
