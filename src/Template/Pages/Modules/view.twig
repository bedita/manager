{% do _view.assign('title', currentModule.name|humanize) %}

<modules-view inline-template>
<div class="modules-view" v-hotkey="keyEvents">

    <header>
        <h1>{{ object.attributes.title|default(__('New entry in') ~ ' ' ~ objectType) }}</h1>
    </header>

    <div class="module-form">
        {{ Form.create({'defaults': object.attributes, 'schema': {}}, {
            'url': {'_name': 'modules:save', 'object_type': objectType},
            'id': 'form-main',
        })|raw }}

            {# Inside column there are form elements, they may have a cssOrder property that reorders
                the elements in single column view, in small viewports. cssOrder may assume the string
                values "1", "2", "3" or "bottom". If missing, the default for cssOrder in "0". #}

            <div class="column">
                {% element 'Form/core_properties' %}

                {# media #}
                {% if objectType in ['images', 'files', 'audio', 'videos'] %}
                    {% if object.id is empty %}
                        {% element 'Form/upload' %}
                    {% else %}
                        {% element 'Form/included' %}
                    {% endif %}
                {% endif %}

                {% element 'Form/other_properties' {'cssOrder': '2'} %} {# Content #}
            </div>

            <div class="column">
                {% element 'Form/publish_properties' {'cssOrder': '1'} %}

                {% if _view.request.params.action != 'create' %}
                    {% element 'Form/trees' {'cssOrder': '2'} %}
                {% endif %}

                {% element 'Form/advanced_properties' %}

                {% element 'Form/meta' {'cssOrder': 'bottom'}  %}
            </div>

            {# temp relations view #}
            {% element 'Form/relations' %}


            {# Append "Save" to commands in commands menu. Must stay here, before the form end. #}
            {% do _view.append('commands', Form.submit(__('Save'), {'form': 'form-main'})) %}
            {# Append "Delete" to commands in commands menu. #}
            {% do _view.append('commands', Form.postButton(__('Delete'), {'_name': 'modules:delete', 'object_type': objectType}, {'data': {'id': object.id}})) %}

        {{ Form.end()|raw }}
    </div>

</div>
</modules-view>
