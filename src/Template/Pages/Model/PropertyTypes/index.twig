{% do _view.assign('title', 'Model ' ~ resourceType|humanize) %}
{% do _view.assign('bodyViewClass', 'view-model') %}

{% set ids = Array.extract(resources, '{*}.id') %}

{# {% set resourceType = _view.request.params.resource_type %} #}
{% set _csrfToken = _view.request.params['_csrfToken']|json_encode %}

<model-index inline-template ids='{{ ids|json_encode }}' resources='{{ resources|json_encode }}' :csrf-token='{{ _csrfToken }}'>
    <div class="model-index">
        <div class="list-resources">
            {# list resources : table header #}
            {% if resources %}
                <nav class="table-header">
                    <div class="first-cell"><a href="{{ Link.sortUrl('id') }}">{{ __('id') }}</a></div>
                    {% for prop in properties %}
                        <div class="{{ prop }}-cell"><a href="{{ Link.sortUrl(prop) }}">{{ __(prop) }}</a></div>
                    {% endfor %}
                    <div class="action-cell"></div>
                </nav>
            {% endif %}

            {# list resources : rows #}
            <form id="property-types" check-changes="true">
            {% for resource in resources %}
                <div
                    v-if="!containsId(deletedPropertyTypes, {{resource.id}})"
                    title="{{ resource.attributes.name }}"
                    class="index-entry"
                    :class="containsId(removePropertyTypes, {{resource.id}}) && 'delete-property-type'">

                    {% set propIndex = loop.index0 %}
                    <div class="first-cell">{{ resource.id }}
                        <i v-if="containsId(editPropertyTypes, {{ resource.id }})" class="icon-pencil"></i>
                    </div>

                    {% for prop in properties %}
                        {% if resource.attributes[prop] is defined %}
                            {% set propVal = resource.attributes[prop] %}
                        {% else %}
                            {% set propVal = resource.meta[prop] %}
                        {% endif %}

                        {% set propVal = Schema.format(propVal, schema.properties[prop]) %}

                        <div class="{{ prop }}-cell" untitled-label="{{ __('Untitled') }}">
                            {% if prop == 'name' %}
                                <input pattern="^\S+$" type="text" placeholder="name"
                                    @keyup="editPropName({{ resource.id }}, $event.target.value)"
                                    value="{{ propVal|raw }}" />
                            {% elseif prop == 'params' %}
                                <autosize-textarea
                                    placeholder="params..."
                                    @input="editPropParams({{ resource.id }}, ...arguments)"
                                    {# :reset-value="formatParams(propertyTypes[{{ propIndex }}])" #}
                                    :value="propertyTypes[{{ propIndex }}] ? formatParams(propertyTypes[{{ propIndex }}]) : {{ propVal|json_encode }}">
                                </autosize-textarea>
                            {% else %}
                                {{ propVal }}
                            {% endif %}
                        </div>
                    {% endfor %}

                    <div class="action-cell">
                        <button class="center-icon icon-trash inverted remove-action" @click.prevent="removePropertyType({{resource.id}})"></button>
                        <button class="center-icon icon-ccw inverted undo-remove-action" @click.prevent="undoRemovePropertyType({{resource.id}})"></button>
                    </div>
                </div>
            {% else %}
                {{ __('No items found') }}
            {% endfor %}

            <div v-for="propertyType in savedPropertyTypes"
                v-if="!containsId(deletedPropertyTypes, propertyType.id)"
                class="index-entry"
                :class="containsId(removePropertyTypes, propertyType.id) && 'delete-property-type'">

                <div class="first-cell">
                    <: propertyType.id :>
                    <i v-if="containsId(editPropertyTypes, propertyType.id)" class="icon-pencil"></i>
                </div>
                <div class="primary">
                    <input type="text" name="" placeholder="name"
                        @keyup="editPropName(propertyType.id, $event.target.value)"
                        v-model.lazy="propertyType.attributes.name"
                        pattern="^\S+$" />
                </div>
                <div class="secondary">
                    <autosize-textarea
                        placeholder="params..."
                        @input="editPropParams(propertyType.id, ...arguments)"
                        :value="formatParams(propertyType)">
                    </autosize-textarea>
                </div>
                <div class="action-cell">
                    <button class="center-icon icon-trash inverted remove-action" @click="removePropertyType(propertyType.id)"></button>
                    <button class="center-icon icon-ccw inverted undo-remove-action" @click="undoRemovePropertyType(propertyType.id)"></button>
                </div>
            </div>

            <div v-for="propertyType in newPropertyTypes" class="index-entry new-row">
                <div class="first-cell">
                    <button type="button" @click="removeRow(propertyType)">-</button>
                </div>
                <div class="primary"><input type="text" name="" placeholder="name" v-model="propertyType.name" pattern="^\S+$" /></div>
                <div class="secondary">
                    <autosize-textarea placeholder="params..." @input="propertyType.params = $event" :value="propertyType.params"></autosize-textarea>
                </div>
                <div class="action-cell"></div>
            </div>

            <div class="index-entry add-row">
                <div>
                    <button type="button" @click="addRow()">+</button>
                </div>
            </div>

            <div class="index-entry">
                <div v-if="formIsModified">
                    <button @click.prevent.stop="save">{{ __('Save') }}</button>
                </div>
            </div>
            </form>
        </div>
        {# end list-objects #}

        {# commands links to append in left side bar (commands menu) #}
        {% do _view.append('module-links', Html.link(__('Object types'), {'_name': 'model:list:object_types'})|raw) %}
        {% do _view.append('module-links', Html.link(__('Relations'), {'_name': 'model:list:relations'})|raw) %}
        {% do _view.append('module-links', Html.link(__('Property types'), {'_name': 'model:list:property_types'})|raw) %}
    </div> {# end module-content #}
</model-index>
