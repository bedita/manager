{% do _view.assign('title', 'Model ' ~ resourceType|humanize) %}
{% do _view.assign('bodyViewClass', 'view-module view-model') %}

<modules-view inline-template ref="moduleView">
<div class="modules-view">

    {% if resource.id %}
    <header>
        <h1 untitled-label="{{ __('Untitled') }}">{{ resource.attributes.name }}</h1>
    </header>
    {% endif %}

    <div class="module-form">

        {{ Form.create({'defaults': resource.attributes, 'schema': {}}, {
            'url': {'_name': 'model:save:object_types'},
            'id': 'form-main',
            'check-changes': 'true',
        })|raw }}

            {{ Form.hidden('id', {'value': (object) ? object.id : resource.id})|raw }}

            <div class="main-view-column">
                <section class="fieldset">
                    <div class="tab-container">
                        {% for key, value in properties.core %}
                            {% set options = Schema.controlOptions(key, value, schema.properties[key]) %}
                            {% if options.class != 'json' %}
                                {% if resource.meta.core_type %}
                                    {% if key in ['name', 'singular', 'table', 'is_abstract', 'parent_name'] %}
                                        {% set options = options|merge({
                                            'readonly' : true,
                                        }) %}
                                     {% endif %}
                                {% endif %}

                                {{ Property.control(key, value, options)|raw }}

                                {% if key == 'parent_name' %}
                                    <a href="{{ Url.build({'_name': 'model:view:object_types', 'id': value}) }}" class="link-to-parent">â€º {{ __('view parent') }}</a>
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    </div>
                </section>

                <section class="fieldset">
                    <div class="tab-container">
                    <header class="unselectable"><h2>{{ __('Add custom property') }}</h2></header>
                        <div class="input">
                            <label for="prop_name">{{ __('Name') }}</label>
                            <div>
                                {{ Form.text('prop_name', {
                                        'placeholder': 'property name',
                                        'class': 'input',
                                })|raw }}
                            </div>
                            <label for="prop_type">{{ __('Type') }}</label>
                            <div>
                                {{ Form.text('prop_type', {
                                        'placeholder': 'property type',
                                        'class': 'input',
                                })|raw }}
                            </div>
                        </div>
                    </div>
                </section>

            </div>

            <div class="side-view-column">
                <section class="fieldset">
                    <div class="tab-container">
                        {% for key, value in properties.core %}
                            {% set options = Schema.controlOptions(key, value, schema.properties[key]) %}
                            {% if options.class == 'json' %}
                                {{ Property.control(key, value, options)|raw }}
                            {% endif %}
                        {% endfor %}
                    </div>
                </section>

                {{ element('Form/meta') }}
            </div>

        {# Set `_jsonKeys` hidden input from config #}
        {{ Form.control('_jsonKeys', {'type': 'hidden', 'value': config('_jsonKeys', [])|join(',')})|raw }}

        {{ Form.end()|raw }}

        {% do _view.append('module-buttons', Form.submit(__('Save'), {'form': 'form-main', 'class': 'button button-primary'})) %}
        {% if not resource.meta.core_type %}
        {% do _view.append('module-buttons', Form.postButton(__('Remove'), {'_name': 'model:remove:object_types', 'id': resource.id})) %}
        {% endif %}
    </div>


    <section class="relations">
        <header class="unselectable"><h2>{{ __('Relations') }}</h2></header>
        <div class="relations-container">
        {% if resource.meta.relations %}
            <div class="relations-group">
            {% for relation in resource.meta.relations %}
                <a class="tag is-black" href="{{ Url.build({'_name': 'model:view:relations', 'id': relation}) }}">{{ relation }}</a>
            {% endfor %}
            </ul>
        {% else %}
            <p>No Relations</p>
        {% endif %}
        </div>
    </section>


    <section class="properties">
        <header class="unselectable"><h2>{{ __('Core properties') }}</h2></header>
        <div class="properties-container">
            {% for prop in objectTypeProperties.core %}
                {{ element('Model/object_property', { 'prop': prop, 'type': 'core' }) }}
            {% else %}
                <p>{{ __('No core properties') }}</p>
            {% endfor %}
        </div>
    </section>


    <section class="properties">
        <header class="unselectable"><h2>{{ __('Inherited properties') }}</h2></header>
        <div class="properties-container">
            {% for prop in objectTypeProperties.inherited %}
                {{ element('Model/object_property', {
                    'prop': prop,
                    'type': 'inherited',
                    'noButtonsFor': ['id', 'status', 'uname'],
                }) }}
            {% else %}
                <p>{{ __('No inherited properties') }}</p>
            {% endfor %}
        </div>
    </section>


    <section class="properties">
        <header class="unselectable"><h2>{{ __('Custom properties') }}</h2></header>
        <div class="properties-container">
            {% for prop in objectTypeProperties.custom %}
                {{ element('Model/object_property', { 'prop': prop, 'type': 'custom' }) }}
            {% else %}
                <p>{{ __('No custom properties') }}</p>
            {% endfor %}
        </div>
    </section>

    {{ element('Model/sidebar_links') }}

</div>
</modules-view>
