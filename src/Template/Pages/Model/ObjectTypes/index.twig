{% do _view.assign('title', 'Model ' ~ resourceType|humanize) %}
{% do _view.assign('bodyViewClass', 'view-module view-model') %}

<div class="module-header">
    <header>
        <h1>Object types</h1>
    </header>
</div>

<div class="module-index">
    <div class="list-objects">

        {# list resources : table header #}
        {% if resources %}
            <nav class="table-header has-border-module-{{ currentModule.name }}">
                <div class="narrow">Id</div>
                {% for prop in properties %}
                    <div class="{{ Link.sortClass(prop) }}">{{ Link.sort(prop) }}</div>
                {% endfor %}
                <div></div>
            </nav>

            {# list resources : rows #}
            {% for resource in resources %}
                {% set classes = 'table-row' %}
                {% if prop == 'enabled' and propVal != 1 %}
                    {% set classes = classes ~ ' object-status-off' %}
                {% endif %}

                <a href="{{ Url.build({'_name': 'model:view:object_types', 'id': resource.id}) }}"
                    class="{{ classes }}">

                    <div class="narrow"> {{ resource.id }}</div>

                    {% for prop in properties %}
                        {% if resource.attributes[prop] is defined %}
                            {% set propVal = resource.attributes[prop] %}
                        {% else %}
                            {% set propVal = resource.meta[prop] %}
                        {% endif %}

                        <div class="{{ prop }}-cell">
                            {% if prop == 'name' %}
                                <span class="tag has-background-module-{{ propVal }}">{{ propVal }}</span>
                            {% else %}
                                {{ Schema.format(propVal, schema.properties[prop]) }}
                            {% endif %}
                        </div>
                    {% endfor %}

                    <div class="buttons-cell narrow">
                        {% set buttonClasses = 'button button-text is-width-auto' %}
                        <button
                            title="{{ __('Edit') }} {{ object.attributes.title }}"
                            class="{{ buttonClasses }}">{{ __('Edit') }}</button>

                        {# TODO: review and uncomment actions once controller part is available #}
                        {# {% if in_array('DELETE', currentModule.hints.allow) %}
                            {{ Form.postButton(__('Delete'), {'_name': 'model:delete', 'resource_type': resource.type}, {'class': '', 'data': {'id': resource.id}})|raw }}
                        {% endif %} #}
                    </div>
                </a>
            {% endfor %}

        {% else %}
                {{ __('No items found') }}
        {% endif %}

    </div>
    {# end list-objects #}

{# append links to sidebar #}
{% do _view.append('module-links', Html.link(__('Object types'), {'_name': 'model:list:object_types'}, { 'class': 'icon-th-2' })|raw) %}
{% do _view.append('module-links', Html.link(__('Relations'), {'_name': 'model:list:relations'}, { 'class': 'icon-resize-full' })|raw) %}
{% do _view.append('module-links', Html.link(__('Properties'), {'_name': 'model:list:property_types'}, { 'class': 'icon-tasks' })|raw) %}

</div> {# end module-content #}
