{% do _view.assign('title', 'Model ' ~ resourceType|humanize) %}
{% do _view.assign('bodyViewClass', 'view-model') %}

{% set ids = Array.extract(resources, '{*}.id') %}

{# {% set resourceType = _view.request.params.resource_type %} #}
{% set _csrfToken = _view.request.params['_csrfToken']|json_encode %}


<model-index inline-template ids='{{ ids|json_encode }}' resources='{{ resources|json_encode }}' :csrf-token='{{ _csrfToken }}'>
    <div class="model-index">
        <div class="list-resources">

        {# list resources : table header #}
        {% if resources %}
            <nav class="table-header">

                <div class="first-cell">{{ Link.sort('id')}}</div>

                {% for prop in properties %}
                    <div class="{{ prop }}-cell">{{ Link.sort(prop) }}</div>
                {% endfor %}
                <div class="action-cell"></div>

            </nav>

            {# list resources : rows #}
            <form id="property-types" check-changes="true">
            {% for resource in resources %}
                    <a
                        href="{{ Url.build({'_name': 'model:view:object_types', 'id': resource.id}) }}"
                        title="{{ resource.attributes.name }}"
                        class="index-entry">

                            <div class="first-cell" @click="selectRow">
                                {{ Form.unlockField('oneItem') }}
                                <input type="checkbox" name="oneItem" value="{{ resource.id }}" v-model="selectedRows">
                                {{ resource.id }}
                            </div>

                        {% for prop in properties %}
                                {% if resource.attributes[prop] is defined %}
                                    {% set propVal = resource.attributes[prop] %}
                                {% else %}
                                    {% set propVal = resource.meta[prop] %}
                                {% endif %}

                            <div class="{{ prop }}-cell" untitled-label="{{ __('Untitled') }}">{{ Schema.format(propVal, schema.properties[prop]) }}</div>
                        {% endfor %}

                        <div class="action-cell"></div>

                        {# TODO: uncomment `delete` action once controller part is available #}
                        {# <div class="buttons">
                        {% if in_array('DELETE', currentModule.hints.allow) %}
                            {{ Form.postButton(__('Delete'), {'_name': 'model:delete', 'resource_type': resource.type}, {'class': '', 'data': {'id': resource.id}})|raw }}
                        {% endif %}
                        </div> #}
                    </a>
            {% endfor %}
            </form>

        {% else %}
                {{ __('No items found') }}
        {% endif %}

        </div>
        {# end list-objects #}

        {# commands links to append in left side bar (commands menu) #}
        {% do _view.append('module-links', Html.link(__('Object types'), {'_name': 'model:list:object_types'})|raw) %}
        {% do _view.append('module-links', Html.link(__('Relations'), {'_name': 'model:list:relations'})|raw) %}
        {% do _view.append('module-links', Html.link(__('Property types'), {'_name': 'model:list:property_types'})|raw) %}

    </div> {# end module-content #}
</model-index>
