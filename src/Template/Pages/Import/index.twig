{% do _view.assign('title', __('Data Import')) %}

<import-view
    :jobs="{{ jobs|json_encode() }}"
    :services="{{ services|json_encode() }}"
    ref="moduleView" inline-template>
<div id="data-import">

    <h1>{{ __('Data Import') }}</h1>
    {{ Form.create(null, {
        'id': 'form-import',
        'type': 'file',
        'url': {'_name': 'import:file'},
    })|raw }}
        <div class="columns">
            <div class="column">
                <section class="fieldset">
                    <header class="tab">
                        <h2>{{ __('File type') }}</h2>
                    </header>
                    <div class="tab-container">
                        {% set allFilters = {} %}
                        {% for index, datum in filters %}
                            {% set allFilters = allFilters|merge({ (index): datum|merge({'@click': 'currentFilterId = ' ~ index}) }) %}
                        {% endfor %}
                        {{ Form.radio('filter', allFilters)|raw }}
                    </div>
                </section>
            </div>

            <div class="column">
                <section class="fieldset">
                    <header class="tab">
                        <h2>{{ __('Options') }}</h2>
                    </header>
                    <div class="tab-container">
                        {% for index, datum in filters %}
                            <div id="filter-{{ datum.value|lower }}-options" v-show="currentFilterId == {{ index }}">
                            {% if datum.options %}
                                {% for optionName,optionData in datum.options %}
                                <div>
                                    <label>{{ optionData.label }}</label>
                                    {% if optionData.dataType == 'boolean' %}
                                        {{ Form.control(optionName, {
                                            'type': 'checkbox',
                                            'name': 'filter_options[' ~ optionName ~ ']',
                                            'checked': optionData.defaultValue|default(false),
                                            'label': '',
                                        })|raw }}
                                    {% elseif optionData.dataType == 'text' %}
                                        {{ Form.control(optionName, {
                                            'type': 'text',
                                            'name': 'filter_options[' ~ optionName ~ ']',
                                            'value': optionData.defaultValue|default('')
                                        })|raw }}
                                    {% elseif optionData.dataType == 'options' %}
                                        {% set oo = {} %}
                                        {% set index = 0 %}
                                        {% for optionValue,optionLabel in optionData.values %}
                                            {% set oo = oo|merge({ (index): {
                                                'text': optionLabel,
                                                'value': optionValue,
                                            }}) %}
                                            {% set index = index + 1 %}
                                        {% endfor %}
                                        {{ Form.control(optionName, {
                                            'type': 'select',
                                            'name': 'filter_options[' ~ optionName ~ ']',
                                            'options': oo,
                                            'value': optionData.defaultValue|default(null)
                                        })|raw }}
                                    {% endif %}
                                </div>
                                {% endfor %}
                            {% else %}
                                <span class="has-text-gray-600">{{ __('No options for this file type') }}</span>
                            {% endif %}
                            </div>
                        {% endfor %}
                    </div>
                </section>
            </div>
        </div>

        <section class="fieldset">
            {# Append "Upload" to commands in commands menu. Must stay here, before the form end. #}
            {# {% do _view.append('module-buttons', Form.submit(__('Upload'), {'form': 'form-import'})) %} #}
            <div class="file has-name">
                <label class="file-label">
                    {{ Form.file('file', {
                        'class': 'file-input',
                        'accept': 'text/xml,text/csv',
                        'v-on:change': 'onFileChanged',
                    }) | raw }}
                    <span class="file-cta icon-upload">
                        <span class="file-label">Choose a file</span>
                    </span>
                    <span class="file-name" v-cloak>
                        <span data-empty-label="{{ __('empty') }}" v-bind:title="fileName"><: fileName :></span>
                    </span>
                </label>
            </div>
        </section>

        <section class="fieldset">
            {{ Form.button(__('Import'), {
                'class': 'submit',
                'onclick': 'this.classList.add(\'is-loading-spinner\')',
            }) | raw }}
        </section>

    {{ Form.end()|raw }}

    {% if result %}
    <section>

        <div class="result">
            <h2>{{ __('Result') }}</h2>
        </div>

        <fieldset id="import-result">
            <div class="import-message">
                <h2>{{ result.info|default('')|nl2br|raw }}</h2>
                <p>{{ __('Number of created resources') }}: {{ result.created|default(0) }}</p>
                <p>{{ __('Number of updated resources') }}: {{ result.updated|default(0) }}</p>
                <p>{{ __('Number of errors') }}: {{ result.errors|default(0) }}</p>

                {% if result.warn %}
                <div class="import-message import-warn">
                    <h2>{{ __('Import warn') }}</h2>
                    <div>{{ result.warn|nl2br|raw }}</div>
                </div>
                {% endif %}

                {% if result.error %}
                <div class="import-message import-error">
                    <h2>{{ __('Import error') }}</h2>
                    <div>{{ result.error|nl2br|raw }}</div>
                </div>
                {% endif %}
            </div>
        </fieldset>

    </section>
    {% endif %}

    {% if services %}
    {# jobs #}
    <div class="columns" v-if="jobs.length != -1">
        <div class="column">
            <section class="fieldset">
                <header class="tab">
                    <h2>{{ __('Jobs') }}</h2>
                </header>
                <div class="tab-container">
                    <div class="list-jobs">
                        <div class="table-header">Job ID</div>
                        <div class="table-header">{{ __('file name') }}</div>
                        <div class="table-header">{{ __('service name') }}</div>
                        <div class="table-header">{{ __('scheduled from') }}</div>
                        <div class="table-header">{{ __('completed on') }}</div>
                        <div class="table-header">{{ __('status') }}</div>
                        <div class="table-header"></div>


                        <template v-for="job in currentJobs">
                            <div :class="job.meta.status"><: job.id :></div>
                            <div :class="job.meta.status"><: job.attributes.payload && job.attributes.payload.filename :></div>
                            <div :class="job.meta.status"><: job.attributes.service :></div>
                            <div :class="job.meta.status"><: job.attributes.scheduled_from :></div>
                            <div :class="job.meta.status"><: job.meta.completed :></div>
                            <div :class="job.meta.status"><: job.meta.status :></div>
                            <div :class="job.meta.status">
                                <a :class="showPayloadId != job.id ? 'icon-plus' : 'icon-minus'" v-on:click.prevent="togglePayload(job.id)"></a>
                            </div>

                            <div class="job-payload" v-show="showPayloadId == job.id"><pre><: job.attributes.payload :></pre></div>
                        </template>
                    </div>
                </div>
            </section>
        </div>

    </div>
    {% endif %}


</div>
</import-view>
