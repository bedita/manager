{% element ('Admin/sidebar') %}

{% do _view.assign('title', __('Administration') ~ ' ' ~ __(resourceType|humanize)) %}
{% do _view.assign('bodyViewClass',  'view-module view-admin') %}
{% set allProperties = properties|merge(propertiesSecrets) %}
{% set txtOptions = {'label': '', 'size': 40} %}
{% set boolOptions = {
    'label': '',
    'type':'radio',
    'options': [
        { 'value': 1, 'text': __('Yes') },
        { 'value': 0, 'text': __('No') }
    ]
} %}

<div class="module-header">
    <header>
        <h1>{{ __(title) }}</h1>
    </header>
</div>

{% element 'Modules/index_header' { 'meta': meta, 'hideFilter': 1, 'Schema': Schema, 'hidePagination': treeView} %}

<admin-index inline-template>

    <div class="module-index">
        <div class="list-objects">

            {# list resources : table header #}
            <nav class="table-header has-border-black">
                <div>{{ __('Id') }}</div>
                {% for key in allProperties %}
                    {% set label = key %}
                    <div class="{{ Link.sortClass(key) }}"><a href="{{ Link.sortUrl(key) }}">{{ __(label)|humanize }}</a></div>
                {% endfor %}
                {% for key in metaColumns %}
                    <div>{{ __(key) }}</div>
                {% endfor %}
                {% if not readonly %}
                    <div></div>
                {% endif %}
            </nav>
            {% if resources|count == 0 %}
                <p>{{ __('Resources not available') }}</p>
            {% endif %}

            {# form to create a new record #}
            {% if not readonly %}
                {{ Form.create(null, {
                    'id': 'form-create',
                    'url': {'_name': 'admin:save:' ~ resourceType},
                    'class': 'table-row',
                })|raw }}
                    <div>{{ __('NEW') }}</div>
                    {% for type, property in properties %}
                        {% set options = type is same as ('bool') ? boolOptions|merge({'value': 1}) : txtOptions %}
                        <div class="{{ property }}-cell" untitled-label="{{ __('Untitled') }}">
                            {{ Property.control(property, '', options)|raw }}
                        </div>
                    {% endfor %}
                    {% for property in propertiesSecrets %}
                        <div class="{{ property }}-cell" untitled-label="{{ __('Untitled') }}">
                            ---
                        </div>
                    {% endfor %}
                    {% for key in metaColumns %}
                        <div class="narrow">-</div>
                    {% endfor %}
                    <div class="buttons-cell narrow">
                        {{ Form.button( __('Create'), {
                            'form': 'form-create',
                            'title': __('Create' ~ ' ' ~ resourceType),
                            'class': 'button button-text-white is-width-auto',
                        })|raw }}
                    </div>
                {{ Form.end()|raw }}
            {% endif %}

            {# list resources : rows #}
            {% for resource in resources %}

                {{ Form.create(null, {
                    'id': 'form-' ~ resource.id,
                    'url': {'_name': 'admin:save:' ~ resourceType},
                    'class': 'table-row',
                })|raw }}
                    <div class="{{ prop }}-cell" untitled-label="{{ __('Untitled') }}">
                        {{ resource.id }}
                    </div>
                    {% for type,property in properties %}
                        {% set val = resource.attributes[property] %}
                        {% set options = type is same as ('bool') ? boolOptions|merge({'value': val}) : txtOptions %}
                        <div class="{{ property }}-cell" untitled-label="{{ __('Untitled') }}">
                            {% if readonly or resource.meta.unchangeable %}
                                {{ Schema.format(val, schema.properties[property]) }}
                            {% else %}
                                {{ Property.control(property, val, options)|raw }}
                            {% endif %}
                        </div>
                    {% endfor %}
                    {% for property in propertiesSecrets %}
                        {% set val = resource.attributes[property] %}
                        <div class="{{ property }}-cell" untitled-label="{{ __('Untitled') }}">
                            <secret val="{{ resource.meta[property] }}" />
                        </div>
                    {% endfor %}
                    {% for key in metaColumns %}
                        <div class="narrow">
                            {{ Time.format(resource.meta[key], 'd MMM YYYY') }}
                        </div>
                    {% endfor %}
                    {% if not readonly and not resource.meta.unchangeable %}
                        <div class="buttons-cell narrow">
                            {{ Form.button( __('Save'), {
                                'form': 'form-' ~ resource.id,
                                'title': __('Save') ~ ' ' ~ resource.attributes.name,
                                'class': 'button button-text-white is-width-auto',
                            })|raw }}

                            {{ Form.button( __('Remove'), {
                                'form': 'form-remove-' ~ resource.id,
                                'title': __('Remove') ~ ' ' ~ resource.attributes.name,
                                'class': 'button button-text-white is-width-auto',
                                '@click.prevent': 'remove',
                                'data-form-id': 'form-remove-' ~ resource.id,
                            })|raw }}
                        </div>
                    {% endif %}

                {{ Form.hidden('id', {'value': resource.id})|raw }}
                {{ Form.end()|raw }}

                {{ Form.create(null, {
                    'id': 'form-remove-' ~ resource.id,
                    'url': {'_name': 'admin:remove:' ~ resourceType, 'id': resource.id},
                })|raw }}
                {{ Form.end()|raw }}

            {% endfor %}

        </div>

    </div>
</admin-index>
