<relation-view inline-template
    :load-on-start={{ loadOnStart }}

    relation-name={{ relationName }}
    config-paginate-sizes={{ config('Pagination.sizeAvailable')|json_encode()|raw }}
    ref="relation"

    @loading="onToggleLoading"
    @count="onCount">

    <div class="relation-view">
        <div class="related-list">

            {# FilterBoxView #}
            <filter-box-view
                :config-paginate-sizes="configPaginateSizes"
                :pagination.sync="pagination"
                :show-filter-buttons="false"
                :relation-types="relationTypes"
                :init-filter="activeFilter"

                objects-label="{{ __('objects') }}"

                @filter-update-current-page="onUpdateCurrentPage"
                @filter-update-page-size="onUpdatePageSize"
                @filter-objects="onFilterObjects"
                inline-template>

                    {% element 'FilterBox/filter_box' %}

            </filter-box-view>

            {# related objects #}
            <div class="related-objects-list columns"
                :class="loading? 'isLoading' : ''"
                {# :droppable="isRelationWithMedia" #}
                droppable
                :accepted-drop="[`.from-relation-${relationName}`,isRelationWithMedia && 'from-files']">

                <div class="related-object column is-one-eight-bigscreen is-one-fifth-desktop is-one-quarter-1024 is-one-third-768"
                    v-for="(related, index) in objects"
                    :key="related.id"
                    :class="containsId(removedRelated, related.id)? 'removed' : ''">
                    <article class="box has-background-black has-text-gray-100 has-text-size-smaller"
                            v-bind:class="related.type">

                        <header>
                            <a class="icon-edit icon-only-icon has-text-size-larger" :href="$helpers.buildViewUrl(related.id)" target="_blank"></a>
                            <h1><a :href="$helpers.buildViewUrl(related.id)" target="_blank"><: related.attributes.title || related.attributes.name :></a></h1>
                            <span class="has-text-size-smaller prop-id"><: related.id :></span>
                        </header>

                        <div class="thumbnail" v-if="related.meta && related.meta.url">
                            <figure v-if="related.type === 'images'">
                                <img :src="related.meta.url" />
                            </figure>
                            {# <div class="cover" v-else>
                                <span class="icon-cover icon-file-pdf"></span>
                            </div> #}
                        </div>

                        <div>
                            <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.type :></span>
                            <span class="tag" v-if="related.attributes.status"><: related.attributes.status :></span>
                        </div>

                        <div class="priority">
                            <label>{{ __('Priority') }}</label>
                            <span class="tag"><: related.meta.relation.priority :></span>
                        </div>

                        <div v-if="relationHasParams()">
                            <ul class="params-list">
                                <li v-for="(param, key) in relationSchema">
                                    <span><: key :></span>&nbsp;
                                        <span v-if="getParamHelper(related, key)" class="tag param-value"><: formatParam(key, getParamHelper(related, key)) :></span>
                                </li>
                            </ul>
                        </div>

                        <button v-if="isPanelOpen(related.id)" class="icon-coffee"
                                @click.prevent.stop="closePanel()">{{ __('cancel') }}</button>
                        <button v-else
                            class="icon-edit"
                                :disabled="isPanelOpen()"
                                @click.prevent.stop="editRelationParams({
                                    object: {{ object|json_encode }},
                                    related: related,
                                    relationName: relationName,
                                    schema: relationSchema,
                            })">{{ __('Edit Params') }}</button>

                        <footer>
                            <a v-if="related.meta.url" class="button is-small icon-forward" :href="related.meta.url" target="_blank">{{ __('view file') }}</a>
                            {# <button v-if="related.meta.url" class="is-small icon-download" @click.prevent.stop="$helpers.downloadResource(related.meta.url)">{{ __('download') }}</button> #}
                            <a class="button is-small" @click.prevent="relationToggle(related)" :class="containsId(removedRelated, related.id) ? 'icon-cw-2' : 'icon-trash'"
                                v-html="containsId(removedRelated, related.id) ? '{{__('undo') }}' : '{{ __('remove') }}'">
                            </a>
                        </footer>

                    </article>
                </div>

                {# empty element: keep for flex layout #}
                <div class="column"></div>
            </div>


            {# staged objects to be added #}
            <p class="column is-1 has-text-size-smallest" v-if="addedRelations.length">{{ __('New relations (save to keep)') }}</p>
            <div class="related-objects-list staged-objects columns" v-if="addedRelations.length">
                <div class="related-object column"
                    v-for="related in addedRelations"
                    :key="related.id"
                    :class="containsId(removedRelated, related.id) ? 'removed' : '' ">
                    <article class="box has-background-gray-700 has-text-gray-100 has-text-size-smaller"
                            v-bind:class="related.type">

                        <header>
                            <h1><: related.attributes.title || related.attributes.name :></h1>
                            <span class="has-text-size-smaller prop-id"><: related.id :></span>
                        </header>

                        <div class="thumbnail">
                            <figure>
                                <img :src="related.meta.url" />
                            </figure>
                        </div>

                        <div>
                            <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.type :></span>
                            <span class="tag" v-if="related.attributes.status"><: related.attributes.status :></span>
                        </div>

                        <footer>
                            <a @click.prevent="removeAddedRelations(related.id)">{{ __('click to remove') }}</a>
                        </footer>
                    </article>
                </div>

                {# empty element: keep for flex layout #}
                <div class="column"></div>
                <div class="column"></div>
                <div class="column"></div>
                <div class="column"></div>
                <div class="column"></div>
            </div>

            {# hidden field - relations serialized json #}
            {{ Form.control(relationName ~ 'removeRelated', {
                'type': 'hidden',
                'name': 'relations[' ~ relationName ~ '][removeRelated]',
                'v-model': 'removedRelationsData'
            })|raw }}
            {{ Form.unlockField('relations.' ~ relationName ~ '.removeRelated')}}

            {# Relations serialized json form element #}
            {{ Form.control(relationName ~ 'addRelated', {
                'type': 'hidden',
                'name': 'relations[' ~ relationName ~ '][addRelated]',
                'v-model': 'addedRelationsData'
            })|raw }}
            {{ Form.unlockField('relations.' ~ relationName ~ '.addRelated')}}
        </div>

        <div class="relation-view-actions">
            <button v-if="isPanelOpen({{object.id|json_encode}})" class="icon-coffee"
                @click.prevent.stop="closePanel()">{{ __('cancel') }}</button>
            <button v-else
                class="icon-hdd"
                :disabled="isPanelOpen()"
                @click.prevent.stop="addRelatedObjects({
                    object: {{object|json_encode}},
                    relationName: relationName,
                    alreadyInView: alreadyInView,
                    relationTypes: relationTypes,
                })">{{ __('add objects') }}</button>

            <button @click.prevent.stop="reloadObjects()">{{ __('reload') }}</button>
        </div>

    </div>
</relation-view>
