{# {% element 'Form/_relations_script' %} #}

<div class="relations">
{% for relationName, val in object.relationships %}
    <div class="relation">

        {# The relation #}
        <h1>{{ relationName }}</h1>

        <relation-view inline-template relation-name={{ relationName }} load-on-start=true>

            <div class="relation-view">
                <div class="related-list">
                    <div class="list-actions">
                        <button @click.prevent="loadRelatedObjects()">Reload</button>
                        <button @click.prevent="showRelationshipsModal()">Add</button>
                        {# <button class="show-more" @click.prevent="showMoreRelated()">Show More</button> #}
                    </div>

                    <div class="list-header" v-show="hasElementsToShow">
                        {# <span></span> #}
                        <span class="title">title</span>
                        <span class="id">id</span>
                        <span class="uname">uname</span>
                        <span class="status">status</span>
                    </div>

                    {# Loader for Load button #}
                    {% element 'loader' %}

                    {# related objects #}
                    <div class="related-objects-list">
                        <div class="related-object" v-for="related in objects" v-show="!containsId(removedRelated, related.id)">
                            {# <span class="priority"><% related.meta.relation.priority %></span> #}
                            <span class="title"><% related.attributes.title || related.attributes.name %></span>
                            <span class="id"><% related.id %></span>
                            <span class="uname"><% related.attributes.uname  %></span>
                            <span class="status"><% related.attributes.status %></span>
                            <a class="open" v-bind:href="buildViewUrl(related.type, related.id)" target="_blank">Open</a>
                            <button class="remove" @click.prevent="removeRelations(related.id, related.type)">x</button>
                        </div>
                    </div>

                    {# staged objects to be added #}
                    <div class="added-objects-list">
                        <div style="opacity: 0.7" class="added-related-object" v-for="related in addedRelations">
                            {# <span class="priority"><% related.meta.relation.priority %></span> #}
                            <span class="title"><% related.attributes.title %></span>
                            <span class="id"><% related.id %></span>
                            <span class="uname"><% related.attributes.uname %></span>
                            <span class="status"><% related.attributes.status %></span>
                            <a class="open" v-bind:href="buildViewUrl(related.type, related.id)" target="_blank">Open</a>
                            <button class="remove" @click.prevent="removeAddedRelations(related.id)">x</button>
                        </div>
                    </div>

                    <div v-if="!loading && !hasElementsToShow()"  class="emptyResults">
                        <span>- no related objects -</span>
                    </div>

                    <div class="remove-relations">
                        {# Relations serialized json form element #}
                        {{ Form.control('', {
                            'type': 'hidden',
                            'name': 'relations[' ~ relationName ~ '][removeRelated]',
                            'v-model': 'relationsData'
                        })|raw }}
                        {{ Form.unlockField('relations.' ~ relationName ~ '.removeRelated')}}
                    </div>
                </div>

                {# component used to add new relations #}
                <relationships-view
                    inline-template
                    relation-name={{ relationName }}

                    {# set viewVisibility of relationships-view with relation-view's showRelationshipsPanel value #}
                    :view-visibility="showRelationshipsPanel"
                    {# bind event visibility-setter of relationships-view to setRelationshipPanelVisibility method of relations-view#}
                    @visibility-setter="setRelationshipPanelVisibility"

                    :added-relations="addedRelations"
                    @append-relations="appendRelations"

                    :hide-relations="hideRelations">
                    <div class="relationships-view">
                        <transition name="fade">
                            <div class="modal-view" v-show="isVisible">
                                <div class="modal-box">
                                    <div class="modal-header">
                                        <button class="close" @click.prevent="hideRelationshipModal()">x</button>
                                    </div>
                                    <div class="filter-bar">
                                        <input type="text" placeholder="filter..." class="search-relationable"/>
                                    </div>
                                    <div class="modal-content">
                                        <div class="add-related-list">
                                            <div class="add-related-list-header">
                                                <span></span>
                                                <span class="title">title</span>
                                                <span class="id">id</span>
                                                <span class="uname">uname</span>
                                                <span class="status">status</span>

                                            </div>

                                            {# Loader for Load button #}
                                            {% element 'loader' %}

                                            <div class="add-related-object"
                                                v-for="related in objects"
                                                v-show="!containsId(hideRelations, related.id)">
                                                {# <span class="priority"><% related.meta.relation.priority %></span> #}
                                                <span>
                                                    <input type="checkbox"
                                                        :value="related"
                                                        v-model="pendingRelations"/>
                                                    </span>
                                                <span class="title"><% related.attributes.title || related.attributes.name %></span>
                                                <span class="id"><% related.id %></span>
                                                <span class="uname"><% related.attributes.uname %></span>
                                                <span class="status"><% related.attributes.status %></span>
                                            </div>

                                            <div v-if="!loading && objects.length === 0"  class="emptyResults">
                                                <span>- no results -</span>
                                            </div>

                                            <div class="list-actions">
                                                <button @click.prevent="appendRelations()">Add</button>
                                            </div>

                                            <div class="save-relations">
                                                {# Relations serialized json form element #}
                                                {{ Form.control('', {
                                                    'type': 'hidden',
                                                    'name': 'relations[' ~ relationName ~ '][addRelated]',
                                                    'v-model': 'relationsData'
                                                })|raw }}
                                                {{ Form.unlockField('relations.' ~ relationName ~ '.addRelated')}}
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </transition>
                    </div>

                </relationship-view>

            </div>

        </relation-view>

    </div>

{% endfor %}
</div>

