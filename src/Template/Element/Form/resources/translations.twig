{% set baseUrl= Url.build(
    {
        '_name': 'translations:edit',
        'object_type': object.type,
        'id': object.id,
        'lang': ''
    }, true)
%}

<div class="resource {{ resourceName }}">
    <property-view inline-template :tab-open="tabsOpen" :tab-open-at-start=true ref={{ resourceName }}>
        <section class="fieldset order-{{ cssOrder }}" :class="isOpen? '' : 'closed'">

            <header @click.prevent="toggleVisibility();" class="tab unselectable" v-bind:class="isLoading? 'is-loading-spinner' : ''">
                <h2>
                    {{ resourceName|humanize|lower }}
                    <span class="tag is-smallest is-black space-around-half"
                        :class="!totalObjects? 'empty' : ''"><: totalObjects :>
                    </span>
                </h2>
            </header>

            <div v-show="isOpen" class="tab-container">

                <relation-view inline-template
                    :load-on-start={{ loadOnStart }}

                    relation-name={{ resourceName }}
                    config-paginate-sizes={{ config('Pagination.sizeAvailable')|json_encode()|raw }}
                    ref="relation"

                    @loading="onToggleLoading"
                    @count="onCount">

                    <div class="relation-view">
                        <div class="related-list">

                            {# related objects #}
                            <div class="related-objects-list columns" v-bind:class="loading? 'isLoading' : ''">

                                <div class="related-object new-button column is-one-eight-bigscreen is-one-fifth-desktop is-one-quarter-1024 is-one-third-768">
                                    <article class="box has-background-black has-text-gray-100 has-text-size-smaller">
                                        {{ Html.link('+', {
                                            '_name': 'translations:add',
                                            'object_type': object.type,
                                            'id': object.id
                                        }, {
                                            'target': "_blank",
                                        })|raw }}
                                    </article>
                                </div>

                                <div class="related-object column is-one-eight-bigscreen is-one-fifth-desktop is-one-quarter-1024 is-one-third-768"
                                    v-for="(related, index) in objects"
                                    :key="related.id"
                                    :class="containsId(removedRelated, related.id)? 'removed' : ''">
                                    <article class="box has-background-black has-text-gray-100 has-text-size-smaller"
                                            v-bind:class="related.type">

                                        <header>
                                            <h1 v-if="related.attributes.name">
                                                <a target="_blank" :href="`{{ baseUrl }}${related.attributes.lang}`"><: related.attributes.name :></a>
                                            </h1>
                                            <h2 v-if="related.attributes.translated_fields && related.attributes.translated_fields.title ">
                                                <a target="_blank" :href="`{{ baseUrl }}${related.attributes.lang}`"><: related.attributes.translated_fields.title :></a>
                                            </h2>
                                            <span class="has-text-size-smaller prop-id"><: related.id :></span>
                                        </header>

                                        <div class="thumbnail" v-if="related.meta && related.meta.url">
                                            <figure>
                                                <img :src="related.meta.url" />
                                            </figure>
                                        </div>

                                        <div>
                                            <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.attributes.lang :></span>
                                            <span class="tag" v-if="related.attributes.status"><: related.attributes.status :></span>
                                        </div>

                                        <footer>
                                            <a class="icon-edit icon-only-icon has-text-size-larger"
                                                target="_blank"
                                                :href="`{{ baseUrl }}${related.attributes.lang}`">
                                            </a>
                                        </footer>

                                    </article>

                                    <footer>
                                        <a class="button is-dark is-small" @click.prevent="relationToggle(related)"
                                            v-html="containsId(removedRelated, related.id)? '{{__('undo remove') }}' : '{{ __('remove') }}'"></a>
                                    </footer>
                                </div>

                                {# empty element: keep for flex layout #}
                                <div class="column"></div>
                            </div>

                        </div>

                        {# hidden field - relations serialized json #}
                        {{ Form.control(resourceName ~ 'removeRelated', {
                            'type': 'hidden',
                            'name': 'relations[' ~ resourceName ~ '][removeRelated]',
                            'v-model': 'removedRelationsData'
                        })|raw }}
                        {{ Form.unlockField('relations.' ~ resourceName ~ '.removeRelated')}}

                    </div>
                </relation-view>
            </div>

        </section>
    </property-view>
</div>
