<children-view inline-template
    relation-name="children"
    config-paginate-sizes={{ config('Pagination.sizeAvailable')|json_encode()|raw }}
    ref="relation"
    :load-on-start={{ loadOnStart }}
    @loading="onToggleLoading" @count="onCount">

    <div class="relation-view children-view">
        <div class="related-list">
            {# FilterBoxView #}
            <filter-box-view
                :config-paginate-sizes="configPaginateSizes"
                :pagination.sync="pagination"
                :show-filter-buttons=false

                objects-label="{{ __('objects') }}"

                @filter-update-current-page="onUpdateCurrentPage"
                @filter-update-page-size="onUpdatePageSize"
                @filter-objects="onFilterObjects"
                inline-template>

                    {% element 'FilterBox/filter_box' %}

            </filter-box-view>

            {# related objects #}
            <div class="related-objects-list columns" v-bind:class="loading ? 'isLoading' : ''">
                <div class="related-object column is-one-eight-bigscreen is-one-fifth-desktop is-one-quarter-1024 is-one-third-768"
                    v-for="(related, index) in objects"
                    :key="related.id"
                    v-bind:class="containsId(removedRelated, related.id)? 'removed' : ''">

                    <article class="box has-background-black has-text-gray-100 has-text-size-smaller"
                            v-bind:class="related.type">

                        <header>
                            <h1><a :href="$helpers.buildViewUrl(related.id)" target="_blank"><: related.attributes.title || related.attributes.name :></a></h1>
                            <span class="has-text-size-smaller prop-id"><: related.id :></span>
                        </header>

                        <div class="thumbnail" v-if="related.meta.url">
                            <figure>
                                <img :src="related.meta.url" />
                            </figure>
                        </div>

                        <div>
                            <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.type :></span>
                            <span class="tag" v-if="related.attributes.status"><: related.attributes.status :></span>
                        </div>

                        <div class="container-grid">
                            <div class="item-grid">{{ __('position') }}:</div>
                            <div class="item-grid"><input class="inline-input" disabled type="number" :value="index + 1" /></div>
                            <div class="item-grid"><label>{{ __('move to') }}:</div>
                            <div class="item-grid"><input class="inline-input" type="number" min="1" step="1" v-model="positions[related.id]" @change="updatePosition(related)" @keyup="updatePosition(related)"/></div>
                        </div>

                        <footer>
                            <a class="icon-edit icon-only-icon has-text-size-larger" :href="$helpers.buildViewUrl(related.id)" target="_blank"></a>
                        </footer>

                    </article>

                    <footer>
                        <a class="button is-dark is-small" @click.prevent="relationToggle(related)"
                            v-html="containsId(removedRelated, related.id)? '{{__('undo remove') }}' : '{{ __('remove') }}'"></a>
                    </footer>
                </div>

                {# empty element: keep for flex layout #}
                <div class="column"></div>
            </div>

            {# staged objects to be added #}
            <p class="column is-1 has-text-size-smallest" v-if="addedRelations.length">{{ __('New relations (save to keep)') }}</p>
            <div class="related-objects-list columns" v-if="addedRelations.length">
                <div class="related-object column"
                    v-for="related in addedRelations"
                    :key="related.id"
                    v-bind:class="containsId(removedRelated, related.id) ? 'removed' : '' ">
                    <article class="box has-background-gray-700 has-text-gray-100 has-text-size-smaller"
                            v-bind:class="related.type">

                        <header>
                            <h1><: related.attributes.title || related.attributes.name :></h1>
                            <span class="has-text-size-smaller prop-id"><: related.id :></span>
                        </header>

                        <div class="thumbnail">
                            <figure>
                                <img />
                            </figure>
                        </div>

                        <div>
                            <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.type :></span>
                            <span class="tag" v-if="related.attributes.status"><: related.attributes.status :></span>
                        </div>

                        <footer>
                            <a @click.prevent="removeAddedRelations(related.id)">{{ __('click to remove') }}</a>
                        </footer>
                    </article>
                </div>

                {# empty element: keep for flex layout #}
                <div class="column"></div>
                <div class="column"></div>
                <div class="column"></div>
                <div class="column"></div>
                <div class="column"></div>
            </div>

            {# hidden field - relations serialized json #}
            {{ Form.control(relationName ~ 'removeRelated', {
                'type': 'hidden',
                'name': 'relations[' ~ relationName ~ '][removeRelated]',
                'v-model': 'removedRelationsData'
            })|raw }}
            {{ Form.unlockField('relations.' ~ relationName ~ '.removeRelated')}}

            {# Relations serialized json form element #}
            {{ Form.control(relationName ~ 'addRelated', {
                'type': 'hidden',
                'name': 'relations[' ~ relationName ~ '][addRelated]',
                'v-model': 'addedRelationsData'
            })|raw }}
            {{ Form.unlockField('relations.' ~ relationName ~ '.addRelated')}}
        </div>


        <div>
            <button v-if="$root.panelIsOpen" class="icon-coffee"
                @click.prevent.stop="closePanel()">{{ __('cancel') }}</button>
            <button v-else
                class="icon-hdd"
                @click.prevent.stop="addRelatedObjects({
                    object: {{object|json_encode}},
                    relationName: relationName,
                    alreadyInView: alreadyInView,
                    relationTypes: relationTypes,
                })">{{ __('add objects') }}</button>

            <button @click.prevent.stop="loadRelatedObjects()">{{ __('reload') }}</button>
        </div>

    </div>
</children-view>
