<aside class="main-panel" v-bind:class="panelIsOpen? 'on' : ''">
    <section class="fieldset main-panel-body">

        <edit-relation-params inline-template :relation=editingRelationParams>
            <div v-if="relation" class="edit-relation">
                <header class="tab unselectable">
                    <h2><span>{{ __('Edit') }} <: relation.name | humanize :></span> &nbsp;</h2>
                    <a href="#" @click.prevent="closeParamsView()">{{ __('close') }}</a>
                </header>

                <div class="object-attributes">
                    <h2>{{ __('Object')}}: {{ object.attributes.title }}</h2>
                    <div>
                        <span class="tag has-background-module-{{object.type}}">{{ object.type }}</span>
                        <span class="tag">{{ object.attributes.status }}</span>
                    </div>

                    <h2>{{ __('Related to')}}: <: relatedName :></h2>
                    <div>
                        <span class="tag" :class="`has-background-module-${this.relatedType}`"><: relatedType :></span>
                        <span class="tag"><: relatedStatus :></span>
                    </div>
                </div>

                <form ref="paramsForm" v-if="relation.schema" class="params-list">
                    <div v-for="(param, key) in relation.schema">
                        <label :title="key"><: param.description :>

                            {# Boolean -> switch button true/false  #}
                            <div v-if="param.type == 'boolean'">
                                <label class="switch">
                                    <input type="checkbox" v-model="editingParams[key]">
                                    <span class="slider round"></span>
                                <label>
                            </div>


                            <div v-if="param.type == 'string'">
                                {# String, format: date-time -> datepicker #}
                                <input v-if="param.format == 'date-time'" v-datepicker time="true" v-model="editingParams[key]"></input>

                                {# String Enum -> select/option #}
                                <div v-else-if="param.enum !== undefined">
                                    <select v-model="editingParams[key]">
                                        <option v-for="item in param.enum" :value="item"><: item :></option>
                                    </select>
                                </div>
                                {# String -> input text #}
                                <input v-else type="text" v-model="editingParams[key]">
                            </div>

                            {# Number -> input number #}
                            <div v-if="param.type == 'number'">
                                <label>
                                    <input type="number" :name="key" step="any" v-model.number="editingParams[key]">
                                <label>
                            </div>

                            {# Integer -> input integer #}
                            <div v-if="param.type == 'integer'">
                                <label>
                                    <input type="number" :name="key" v-model.number="editingParams[key]">
                                <label>
                            </div>

                        </label>
                    </div>
                </form>

                <footer>
                    <p>
                        <button class="has-background-info has-text-white"
                            @click.prevent="saveParams()">{{ __('Save ') }}</button>
                    </p>
                </footer>
            </div>
        </edit-relation-params>


        {# add relation component #}
        <relations-add v-if="addRelation.name" inline-template config-paginate-sizes={{ config('Pagination.sizeAvailable')|json_encode()|raw }} :relation-name="addRelation.name" :already-in-view="addRelation.alreadyInView">
            <div class="relations-add">
                <header class="tab unselectable" v-bind:class="!objects ? 'is-loading-spinner' : ''">
                    <h2><span v-show="relationName">{{ __('add to') }} <: relationName | humanize :></span> &nbsp;</h2>
                    <a href="#" @click.prevent="closePanel()">{{ __('close') }}</a>
                </header>

                <nav class="pagination has-text-size-smallest">
                    <div>
                        <span><: pagination.page_items :> {{ __('objects') }}</span>
                    </div>
                    <div>
                        <span>
                            <input type="text" placeholder="{{ __('Search') }}" v-model="filter" />
                        </span>
                    </div>
                    <div>
                        <span>{{ __('Page size') }}:</span>
                    </div>
                    <div>
                        <select class="page-size-selector has-background-gray-700 has-border-gray-700 has-text-gray-200 has-text-size-smallest has-font-weight-light" v-model="pageSize">
                            <option v-for="size in paginateSizes"><: size :></option>
                        </select>

                        <button
                            v-for="i in pagination.page_count" :key="i"
                            v-if="paginationPageLinkVisible(i)"
                            v-bind:class="pagination.page == i? '' : 'is-dark'"
                            v-bind:style="pagination.page == i? 'pointer-events: none' : ''"
                            class="has-text-size-smallest" @click.prevent="toPage(i)"><: i :></button>
                    </div>
                </nav>

                {# objects #}
                <div class="related-objects-list columns">
                    <div class="related-object column is-3"
                        v-for="related in objects">
                        <article class="box has-text-gray-100 has-text-size-smaller"
                                v-bind:class="[selectedObjects.indexOf(related) != -1? 'selected' : '',
                                    alreadyInView.indexOf(related.id) != -1? 'unselectable':'']"
                                @click.prevent.stop="toggle(related, $event)">

                            <header>
                                <h1><: related.attributes.title || related.attributes.name :></h1>
                                <span class="has-text-size-smaller prop-id"><: related.id :></span>
                            </header>

                            <div class="thumbnail">
                                <figure>
                                    <img />
                                </figure>
                            </div>

                            <div>
                                <span class="tag" v-bind:class="'has-background-module-' + related.type"><: related.type :></span>
                            </div>

                            <footer>
                                <a>{{ __('open') }}</a>
                            </footer>
                        </article>
                    </div>

                    {# empty element: keep for flex layout #}
                    <div class="column"></div>
                </div>

                <footer>
                    <p>
                        <button class="has-background-info has-text-white" :disabled="!selectedObjects.length"
                            @click.prevent="returnDataFromPanel({
                                action: 'add-relation',
                                relationName: relationName,
                                objects: selectedObjects,
                            })">{{ __('Add objects to') }} <: relationName | humanize :></button>
                    </p>
                    <span class="tag" v-bind:class="selectedObjects.length? 'has-background-info' : ''"><: selectedObjects.length :></span>
                </footer>

            </div>
        </relations-add inline-template>

    </section>
</aside>
