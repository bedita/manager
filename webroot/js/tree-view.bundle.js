(window.webpackJsonp=window.webpackJsonp||[]).push([["tree-view","relationships-view"],{"./src/Template/Layout/js/app/components/relation-view/relationships-view/relationships-view.js":function(e,t,i){"use strict";i.r(t);var s=i("./src/Template/Layout/js/app/mixins/paginated-content.js");t.default={mixins:[s.c],props:{relationName:{type:String,required:!0},viewVisibility:{type:Boolean,default:()=>!1},addedRelations:{type:Array,default:()=>[]},hideRelations:{type:Array,default:()=>[]}},computed:{keyEvents(){return{esc:{keyup:this.handleKeyboard}}}},data:()=>({method:"relationshipsJson",loading:!1,pendingRelations:[],relationsData:[],isVisible:!1}),created(){this.endpoint=`${this.method}/${this.relationName}`},watch:{addedRelations(e){this.pendingRelations=e},pendingRelations(e){this.relationsData=this.relationFormatterHelper(e)},viewVisibility(e){this.isVisible=e},isVisible(){this.objects.length||this.loadObjects(),this.$nextTick(()=>{this.isVisible&&this.$refs.inputFilter&&this.$refs.inputFilter.focus()}),this.$emit("visibility-setter",this.isVisible)},loading(e){this.$parent.$emit("loading",e)}},methods:{async loadObjects(){this.loading=!0;let e=this.getPaginatedObjects();return e.then(e=>(this.loading=!1,e)).catch(e=>{20!==e.code&&(this.loading=!1,console.error(e))}),e},appendRelations(){this.$emit("append-relations",this.pendingRelations),this.isVisible=!1},handleKeyboard(e){this.isVisible&&(e.stopImmediatePropagation(),e.preventDefault(),this.hideRelationshipModal())},hideRelationshipModal(){this.pendingRelations=this.addedRelations,this.isVisible=!1},hasElementsToShow(){return this.objects.filter(e=>!this.hideRelations.filter(t=>e.id===t.id).length).length},relationFormatterHelper(e,t){let i="";try{i=JSON.stringify(e)}catch(e){console.error(e)}return i},containsId:(e,t)=>e.filter(e=>e.id===t).length}}},"./src/Template/Layout/js/app/components/tree-view/tree-view.js":function(e,t,i){"use strict";i.r(t);var s=i("./src/Template/Layout/js/app/components/relation-view/relationships-view/relationships-view.js"),a=i("./node_modules/sleep-promise/build/esm.mjs");t.default={extends:s.default,components:{TreeList:()=>i.e("tree-list").then(i.bind(null,"./src/Template/Layout/js/app/components/tree-view/tree-list/tree-list.js"))},props:{relatedObjects:{type:Array,default:()=>[]},loadOnStart:[Boolean,Number],multipleChoice:{type:Boolean,default:!0}},data:()=>({jsonTree:{}}),created(){this.loadTree()},watch:{pendingRelations(e){let t=e.filter(e=>!this.isRelated(e.id));this.multipleChoice||t.length&&(t=t[0]);const i=!!t.length;this.$el.dispatchEvent(new CustomEvent("change",{bubbles:!0,detail:{id:this.$vnode.tag,isChanged:i}})),this.relationsData=this.relationFormatterHelper(t);let s=this.relatedObjects.filter(e=>!this.isPending(e.id));this.$emit("remove-relations",s)},objects(){this.pendingRelations=this.objects.filter(e=>this.isRelated(e.id))}},methods:{async loadTree(){if(this.loadOnStart){var e="number"==typeof this.loadOnStart?this.loadOnStart:0;await Object(a.a)(e),await this.loadObjects(),this.jsonTree={name:"Root",root:!0,object:{},children:this.createTree()}}},addRelation(e){e&&void 0!==!e.id?this.containsId(this.pendingRelations,e.id)||this.pendingRelations.push(e):console.error("[addRelation] needs first param (related) as {object} with property id set")},removeRelation(e){e&&e.id?this.pendingRelations=this.pendingRelations.filter(t=>t.id!==e.id):console.error("[removeRelation] needs first param (related) as {object} with property id set")},removeAllRelations(){this.pendingRelations=[],this._setChildrenData(this,"stageRelated",!1)},_setChildrenData(e,t,i){void 0!==e&&t in e&&(e[t]=i),e.$children.forEach(e=>{this._setChildrenData(e,t,i)})},createTree(){let e=[];return this.objects.forEach(t=>{let i=t.meta.path&&t.meta.path.split("/");if(i.length){i.shift();let s=e;i.forEach(e=>{let i=this.findPath(s,e);if(i)s=i.children;else{let i=t;i.id!==e&&(i=this.findObjectById(e));let a={id:e,related:this.isRelated(e),name:i.attributes.title||"",object:i,children:[]};s.push(a),s=a.children}})}}),e},findPath(e,t){let i=e.filter(e=>e.id===t);return!!i.length&&i[0]},isRelated(e){return!!this.relatedObjects.filter(t=>e===t.id).length},isPending(e){return!!this.pendingRelations.filter(t=>e===t.id).length}}}}}]);